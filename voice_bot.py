#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway
"""
import logging
import tempfile
import os
from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

class SimpleVoiceHandler:
    def __init__(self):
        logger.info("üé§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞")
        
    async def handle_voice_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user = update.effective_user
        voice = update.message.voice
        
        logger.info(f"üì¢ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name} (ID: {user.id})")
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        status_msg = await update.message.reply_text("üé§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        try:
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            duration = voice.duration if voice.duration else 5
            
            # –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
            import random
            
            professional_phrases = [
                "–•–æ—á—É –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∫–∞—Ä—å–µ—Ä—É",
                "–ü–æ–º–æ–≥–∏—Ç–µ —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", 
                "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑",
                "–ö–∞–∫–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –º–Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç",
                "–ò—â—É —Ä–∞–±–æ—Ç—É –≤ IT —Å—Ñ–µ—Ä–µ",
                "–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞",
                "–•–æ—á—É —Å–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é",
                "–ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –∫–∞—Ä—å–µ—Ä–µ"
            ]
            
            casual_phrases = [
                "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
                "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å?", 
                "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö",
                "–ú–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å –≤–æ–ø—Ä–æ—Å–æ–º?",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å"
            ]
            
            if duration > 10:  # –î–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è = –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ
                recognized_text = random.choice(professional_phrases)
            elif duration > 5:  # –°—Ä–µ–¥–Ω–∏–µ = –≤–æ–ø—Ä–æ—Å—ã
                recognized_text = "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å –∏ –∫–∞–∫ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å"
            else:  # –ö–æ—Ä–æ—Ç–∫–∏–µ = –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
                recognized_text = random.choice(casual_phrases)
            
            # –ü—Ä–æ—Å—Ç–æ–π AI –æ—Ç–≤–µ—Ç
            ai_response = await self.generate_simple_response(recognized_text, user.first_name)
            
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await status_msg.edit_text(
                f"üé§ **–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:** {recognized_text}\n\n"
                f"ü§ñ **AI –æ—Ç–≤–µ—Ç:** {ai_response}\n\n"
                f"‚è±Ô∏è **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {duration} —Å–µ–∫.\n"
                f"üí° *–≠—Ç–æ —Å–∏–º—É–ª—è—Ü–∏—è - –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ API*"
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await status_msg.edit_text(
                "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
                "üé§ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–º.\n\n"
                "üí° –î–ª—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ–ª–æ—Å–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤."
            )
    
    async def generate_simple_response(self, text, user_name):
        """–£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è HR-–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        text_lower = text.lower()
        
        # –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è HR-–±–æ—Ç–∞
        if any(word in text_lower for word in ['–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏', '–∫–∞—Ä—å–µ—Ä–∞', '—Ä–∞–±–æ—Ç–∞', '—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å']):
            return f"–û—Ç–ª–∏—á–Ω–æ, {user_name}! –Ø –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ–π—Ç–∏ –ø–æ–ª–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start. –≠—Ç–æ –∑–∞–π–º–µ—Ç 5 –º–∏–Ω—É—Ç –∏ –¥–∞—Å—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."
        elif any(word in text_lower for word in ['–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π', '–∞–Ω–∞–ª–∏–∑', '–ª–∏—á–Ω–æ—Å—Ç–∏', '—Ç–µ—Å—Ç']):
            return "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ - –º–æ—è –æ—Å–Ω–æ–≤–Ω–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è! –ò—Å–ø–æ–ª—å–∑—É—é –º–µ—Ç–æ–¥–∏–∫–∏ –§—Ä–µ–π–¥–∞, –Æ–Ω–≥–∞, MBTI –∏ Big Five. –ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏."
        elif any(word in text_lower for word in ['it', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', '—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–∞–π—Ç–∏']):
            return "IT-—Å—Ñ–µ—Ä–∞ –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–º IT-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –ø—Ä–æ–≤–µ–¥—É –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π. –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π."
        elif any(word in text_lower for word in ['–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', '—Ä–µ–∫–ª–∞–º–∞', '–ø—Ä–æ–¥–∞–∂–∏']):
            return "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ —Ç—Ä–µ–±—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ª–∏—á–Ω–æ—Å—Ç–∏. –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ –¥–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
        elif any(word in text_lower for word in ['—Å–º–µ–Ω–∏—Ç—å', '–ø–æ–º–µ–Ω—è—Ç—å', '–¥—Ä—É–≥—É—é']):
            return f"–°–º–µ–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ - —Å–µ—Ä—å–µ–∑–Ω—ã–π —à–∞–≥! –ü–æ–º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–µ–≥–æ –ø—Å–∏—Ö–æ—Ç–∏–ø–∞. {user_name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start."
        elif any(word in text_lower for word in ['–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '—Å–æ–≤–µ—Ç', '–ø–æ–º–æ—á—å']):
            return "–Ø –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π HR-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∏ –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫. –ü—Ä–æ–≤–æ–∂—É –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –¥–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ä—å–µ—Ä–µ. –î–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start."
        elif any(word in text_lower for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi']):
            return f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø HR-–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫, –ø–æ–º–æ–≥–∞—é —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º. –ì–æ—Ç–æ–≤ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏!"
        elif any(word in text_lower for word in ['—É–º–µ–µ—à—å', '–º–æ–∂–µ—à—å', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏']):
            return "–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –≥–ª—É–±–æ–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ª–∏—á–Ω–æ—Å—Ç–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º, HR-–æ—Ü–µ–Ω–∫–∞. –¢–∞–∫–∂–µ —Ç–µ—Å—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start –∏–ª–∏ /phone."
        elif any(word in text_lower for word in ['–¥–µ–ª–∞', 'how are you']):
            return "–û—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é! –ü—Ä–æ–≤–æ–∂—É –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º –Ω–∞–π—Ç–∏ —Å–≤–æ–µ –ø—Ä–∏–∑–≤–∞–Ω–∏–µ. –ê —É –≤–∞—Å –∫–∞–∫ –¥–µ–ª–∞ —Å –∫–∞—Ä—å–µ—Ä–æ–π?"
        elif len(text) > 50:
            return "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑! –î–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–π—Ç–∏ –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç. –ö–æ–º–∞–Ω–¥–∞ /start –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å."
        else:
            return f"–ü–æ–Ω—è–ª, {user_name}! –Ø –∑–¥–µ—Å—å —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–æ–º –ª–∏—á–Ω–æ—Å—Ç–∏. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤ –∫–∞—Ä—å–µ—Ä–Ω–æ–º –ø–ª–∞–Ω–µ?"

    async def handle_video_note(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä—É–≥–ª—ã—Ö –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–π"""
        user = update.effective_user
        video_note = update.message.video_note
        
        logger.info(f"üé• –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name} (ID: {user.id})")
        
        duration = video_note.duration if video_note.duration else 0
        
        await update.message.reply_text(
            f"üé• **–ü–æ–ª—É—á–∏–ª –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ!**\n\n"
            f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫.\n"
            f"üë§ –û—Ç: {user.first_name}\n\n"
            f"ü§ñ –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
            f"üì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º!\n\n"
            f"üí° *–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö*"
        )

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
voice_handler = SimpleVoiceHandler()

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ main.py
async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ main.py"""
    await voice_handler.handle_voice_message(update, context)

async def handle_video_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ main.py"""
    await voice_handler.handle_video_note(update, context)

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async def test_voice_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    handler = SimpleVoiceHandler()
    
    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
    test_phrases = [
        "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
        "–ß—Ç–æ —É –º–µ–Ω—è —Å –ø–ª–∞–Ω–∞–º–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ",
        "–£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–µ–∫—Ç–æ–º",
        "–î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥–µ—Ç–∞–ª–µ–π –æ —Ç–æ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∂–∏–∑–Ω–∏"
    ]
    
    for phrase in test_phrases:
        response = await handler.generate_simple_response(phrase, "–¢–µ—Å—Ç–µ—Ä")
        print(f"üìù '{phrase}' -> '{response}'")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    import asyncio
    asyncio.run(test_voice_system())
