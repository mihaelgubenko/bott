#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python clear_memory.py
"""

import os
import sqlite3
import glob

def clear_bot_memory():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –ø–∞–º—è—Ç—å –±–æ—Ç–∞"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞...")
    
    # 1. –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_files = ['psychoanalyst.db', 'clients.db', 'candidates.db']
    for db_file in db_files:
        if os.path.exists(db_file):
            try:
                conn = sqlite3.connect(db_file)
                cursor = conn.cursor()
                cursor.execute('DELETE FROM clients')
                conn.commit()
                conn.close()
                print(f"‚úÖ –û—á–∏—â–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_file}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {db_file}: {e}")
    
    # 2. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Python
    cache_dirs = ['__pycache__', '.pytest_cache']
    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            try:
                import shutil
                shutil.rmtree(cache_dir)
                print(f"‚úÖ –û—á–∏—â–µ–Ω –∫—ç—à: {cache_dir}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {cache_dir}: {e}")
    
    # 3. –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
    log_files = glob.glob('*.log')
    for log_file in log_files:
        try:
            os.remove(log_file)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ª–æ–≥: {log_file}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {log_file}: {e}")
    
    print("\nüéâ –ü–∞–º—è—Ç—å –±–æ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!")
    print("üí° –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –¥–µ–ø–ª–æ–µ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å —á–∏—Å—Ç–æ–π –ø–∞–º—è—Ç—å—é")

if __name__ == "__main__":
    clear_bot_memory()
